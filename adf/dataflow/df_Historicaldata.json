{
	"name": "df_Historicaldata",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQL_payrollData",
						"type": "DatasetReference"
					},
					"name": "srcpayrolldataSQL"
				},
				{
					"dataset": {
						"referenceName": "dirhistorypayroldata",
						"type": "DatasetReference"
					},
					"name": "srcHistoricaldata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "syn_payroll_summary",
						"type": "DatasetReference"
					},
					"name": "snkpayrollsummary"
				}
			],
			"transformations": [
				{
					"name": "Union"
				},
				{
					"name": "derTotalPaid"
				},
				{
					"name": "filteryear"
				},
				{
					"name": "aggAgencyYear"
				}
			],
			"scriptLines": [
				"parameters{",
				"     FiscalYear as integer",
				"}",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcpayrolldataSQL",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as string,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as string,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as string,",
				"          PayBasis as string,",
				"          RegularHours as string,",
				"          RegularGrossPaid as string,",
				"          OTHours as string,",
				"          TotalOTPaid as string,",
				"          TotalOtherPay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srcHistoricaldata",
				"srcpayrolldataSQL, srcHistoricaldata union(byName: true)~> Union",
				"filteryear derive(Totalpaid = toFloat(RegularGrossPaid)+toFloat(TotalOTPaid)+toFloat(TotalOtherPay)) ~> derTotalPaid",
				"Union filter(toInteger(FiscalYear) >= $FiscalYear) ~> filteryear",
				"derTotalPaid aggregate(groupBy(AgencyName,",
				"          FiscalYear)) ~> aggAgencyYear",
				"aggAgencyYear sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> snkpayrollsummary"
			]
		}
	}
}